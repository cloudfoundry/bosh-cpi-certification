---
groups:
  - name: ((group_name))
    jobs:
      - bats-centos-7
      - bats-ubuntu-trusty
      - bats-ubuntu-xenial
      - test-stemcell-ubuntu-trusty
      - test-stemcell-ubuntu-xenial
      - test-upgrade
      - certify-centos-7
      - certify-ubuntu-trusty
      - certify-ubuntu-xenial

shared:
  - &prepare-director
    task: prepare-director
    file: pipelines/shared/tasks/prepare-director.yml
    params: &prepare-director-params
      INFRASTRUCTURE:     azure
      DIRECTOR_VARS_FILE: ((azure_director_vars_file))
      OPTIONAL_OPS_FILE: |
        -o bosh-deployment/azure/custom-environment.yml
        -o bosh-deployment/azure/use-managed-disks.yml
        -o bosh-deployment/external-ip-with-registry-not-recommended.yml
        -o pipelines/shared/assets/ops/remove-provider-cert.yml
        -o pipelines/shared/assets/ops/remove-hm.yml

  - &deploy-director
    task: deploy-director
    file: pipelines/shared/tasks/deploy-director.yml

  - &run-bats
    task: run-bats
    file: pipelines/shared/tasks/run-bats.yml
    params: &run-bats-params
      INFRASTRUCTURE:     azure
      BAT_INFRASTRUCTURE: azure

  - &test-stemcell-ubuntu-trusty
    task: test-stemcell-ubuntu-trusty
    file: pipelines/shared/tasks/test-stemcell.yml
    params:
      BOSH_os_name: ubuntu-trusty
      package: ipv4director

  - &test-stemcell-ubuntu-xenial
    task: test-stemcell-ubuntu-xenial
    file: pipelines/shared/tasks/test-stemcell.yml
    params:
      BOSH_os_name: ubuntu-xenial
      package: ipv4director

  - &update-cloud-config
    task: update-cloud-config
    file: pipelines/shared/tasks/update-cloud-config.yml
    params: &update-cloud-config-params
      INFRASTRUCTURE: azure
      DIRECTOR_VARS_FILE: ((azure_director_vars_file))

  - &teardown
    task: teardown
    file: pipelines/shared/tasks/teardown.yml

  - &create-environment
    put: environment
    params:
      delete_on_failure: true
      generate_random_name: true
      terraform_source: pipelines/azure/assets/terraform

  - &destroy-environment
    put: environment
    params:
      action: destroy
      env_name_file: environment/name
      terraform_source: pipelines/azure/assets/terraform
    get_params:
      action: destroy

jobs:
  - name: test-stemcell-ubuntu-trusty
    serial: true
    plan:
      - aggregate:
        - {get: bosh-release,    trigger: true}
        - {get: cpi-release,     trigger: true}
        - {get: stemcell,        trigger: true, resource: ubuntu-trusty-stemcell}
        - {get: after-midnight,  trigger: true}
        - {get: pipelines,       trigger: false}
        - {get: bosh-cli,        trigger: false}
        - {get: bats,            trigger: false}
        - {get: bosh-deployment, trigger: false}
        - {get: syslog-release,  trigger: false}
        - {get: os-conf-release, trigger: false}
        - {get: bosh-linux-stemcell-builder, trigger: false}
      - <<: *create-environment
      - do:
        - <<: *prepare-director
        - do:
          - <<: *deploy-director
          - <<: *update-cloud-config
          - <<: *test-stemcell-ubuntu-trusty
          ensure:
            do:
              - <<: *teardown
        ensure:
          do:
            - <<: *destroy-environment

  - name: test-stemcell-ubuntu-xenial
    serial: true
    plan:
      - aggregate:
        - {get: bosh-release,    trigger: true}
        - {get: cpi-release,     trigger: true}
        - {get: stemcell,        trigger: true, resource: ubuntu-xenial-stemcell}
        - {get: after-midnight,  trigger: true}
        - {get: pipelines,       trigger: false}
        - {get: bosh-cli,        trigger: false}
        - {get: bats,            trigger: false}
        - {get: bosh-deployment, trigger: false}
        - {get: syslog-release,  trigger: false}
        - {get: os-conf-release, trigger: false}
        - {get: bosh-linux-stemcell-builder, trigger: false}
      - <<: *create-environment
      - do:
        - <<: *prepare-director
        - do:
          - <<: *deploy-director
          - <<: *update-cloud-config
          - <<: *test-stemcell-ubuntu-xenial
          ensure:
            do:
              - <<: *teardown
        ensure:
          do:
            - <<: *destroy-environment

  - name: bats-centos-7
    serial: true
    plan:
      - aggregate:
        - {get: bosh-release,    trigger: true}
        - {get: cpi-release,     trigger: true}
        - {get: stemcell,        trigger: true, resource: centos-7-stemcell}
        - {get: ubuntu-xenial-stemcell}
        - {get: after-midnight,  trigger: true}
        - {get: pipelines,       trigger: false}
        - {get: bosh-cli,        trigger: false}
        - {get: bats,            trigger: false}
        - {get: bosh-deployment, trigger: false}
      - <<: *create-environment
      - <<: *prepare-director
        input_mapping:
          stemcell: ubuntu-xenial-stemcell
      - do:
          - <<: *deploy-director
            input_mapping:
              stemcell: ubuntu-xenial-stemcell
          - <<: *run-bats
            params:
              <<: *run-bats-params
              STEMCELL_NAME: bosh-azure-hyperv-centos-7-go_agent
              BAT_RSPEC_FLAGS: "--tag ~raw_ephemeral_storage --tag ~multiple_manual_networks"
        ensure:
          do:
            - <<: *teardown
            - <<: *destroy-environment

  - name: bats-ubuntu-trusty
    serial: true
    plan:
      - aggregate:
        - {get: bosh-release,    trigger: true}
        - {get: cpi-release,     trigger: true}
        - {get: stemcell,        trigger: true, resource: ubuntu-trusty-stemcell}
        - {get: after-midnight,  trigger: true}
        - {get: pipelines,       trigger: false}
        - {get: bosh-cli,        trigger: false}
        - {get: bats,            trigger: false}
        - {get: bosh-deployment, trigger: false}
      - <<: *create-environment
      - <<: *prepare-director
      - do:
          - <<: *deploy-director
          - <<: *run-bats
            params:
              <<: *run-bats-params
              STEMCELL_NAME: bosh-azure-hyperv-ubuntu-trusty-go_agent
              BAT_RSPEC_FLAGS: "--tag ~raw_ephemeral_storage"
        ensure:
          do:
            - <<: *teardown
            - <<: *destroy-environment

  - name: bats-ubuntu-xenial
    serial: true
    plan:
      - aggregate:
        - {get: bosh-release,    trigger: true}
        - {get: cpi-release,     trigger: true}
        - {get: stemcell,        trigger: true, resource: ubuntu-xenial-stemcell}
        - {get: after-midnight,  trigger: true}
        - {get: pipelines,       trigger: false}
        - {get: bosh-cli,        trigger: false}
        - {get: bats,            trigger: false}
        - {get: bosh-deployment, trigger: false}
      - <<: *create-environment
      - <<: *prepare-director
      - do:
          - <<: *deploy-director
          - <<: *run-bats
            params:
              <<: *run-bats-params
              STEMCELL_NAME: bosh-azure-hyperv-ubuntu-xenial-go_agent
              BAT_RSPEC_FLAGS: "--tag ~raw_ephemeral_storage"
        ensure:
          do:
            - <<: *teardown
            - <<: *destroy-environment

  - name: test-upgrade
    serial: true
    plan:
      - aggregate:
        - {get: bosh-release,           trigger: true}
        - {get: cpi-release,            trigger: true}
        - {get: stemcell,               trigger: true, resource: ubuntu-trusty-stemcell}
        - {get: after-midnight,         trigger: true}
        - {get: pipelines,              trigger: false}
        - {get: bosh-cli,               trigger: false}
        - {get: centos-7-stemcell,      trigger: false} # pass-through
        - {get: ubuntu-xenial-stemcell, trigger: false} # pass-through
        - {get: old-stemcell,           trigger: false, version: {version: "3363.14"}}
        - {get: old-bosh-release,       trigger: false, version: {version: ((old_bosh_release_version))}, resource: bosh-release}
        - {get: old-cpi-release,        trigger: false, version: {version: "24"},  resource: cpi-release}
        - {get: bosh-deployment,        trigger: false}
      - <<: *create-environment
      - <<: *prepare-director
        input_mapping:
          stemcell:     old-stemcell
          bosh-release: old-bosh-release
          cpi-release:  old-cpi-release
        params:
          <<: *prepare-director-params
          OPTIONAL_OPS_FILE: |
            -o bosh-deployment/azure/custom-environment.yml
            -o bosh-deployment/azure/use-managed-disks.yml
            -o bosh-deployment/external-ip-with-registry-not-recommended.yml
            -o pipelines/shared/assets/ops/remove-provider-cert.yml
            -o pipelines/shared/assets/ops/remove-hm.yml
      - do:
          - <<: *deploy-director
            input_mapping:
              stemcell:     old-stemcell
              bosh-release: old-bosh-release
              cpi-release:  old-cpi-release
          - <<: *update-cloud-config
          - task: create-deployment
            file: pipelines/shared/tasks/create-deployment.yml
            input_mapping:
              stemcell:        old-stemcell
            params:
              INFRASTRUCTURE: azure
              STEMCELL_NAME:  bosh-azure-hyperv-ubuntu-trusty-go_agent
          - <<: *prepare-director
          - task: test-upgrade
            file: pipelines/shared/tasks/test-upgrade.yml
            input_mapping:
              old-director-state: director-state
              new-director-config: director-config
            output_mapping:
              new-director-state: director-state
        ensure:
          do:
            - <<: *teardown
            - <<: *destroy-environment

  - name: certify-centos-7
    serial: true
    plan:
      - aggregate:
        - {get: bosh-release, trigger: true, passed: [bats-centos-7]}
        - {get: cpi-release,  trigger: true, passed: [bats-centos-7]}
        - {get: stemcell,     trigger: true, passed: [bats-centos-7, test-upgrade], resource: centos-7-stemcell}
        - {get: pipelines,    trigger: false}
      - task: generate
        file: pipelines/shared/tasks/generate-receipt.yml
        params:
          CPI_RELEASE_NAME: bosh-azure-cpi
          STEMCELL_NAME:    bosh-azure-hyperv-centos-7-go_agent
      - {put: receipt, params: {file: certification/*-receipt.json}}

  - name: certify-ubuntu-trusty
    serial: true
    plan:
      - aggregate:
        - {get: bosh-release, trigger: true, passed: [bats-ubuntu-trusty]}
        - {get: cpi-release,  trigger: true, passed: [bats-ubuntu-trusty]}
        - {get: stemcell,     trigger: true, passed: [bats-ubuntu-trusty, test-upgrade, test-stemcell-ubuntu-trusty], resource: ubuntu-trusty-stemcell}
        - {get: pipelines,    trigger: false}
      - task: generate
        file: pipelines/shared/tasks/generate-receipt.yml
        params:
          CPI_RELEASE_NAME: bosh-azure-cpi
          STEMCELL_NAME:    bosh-azure-hyperv-ubuntu-trusty-go_agent
      - {put: receipt, params: {file: certification/*-receipt.json}}

  - name: certify-ubuntu-xenial
    serial: true
    plan:
      - aggregate:
        - {get: bosh-release, trigger: true, passed: [bats-ubuntu-xenial]}
        - {get: cpi-release,  trigger: true, passed: [bats-ubuntu-xenial]}
        - {get: stemcell,     trigger: true, passed: [bats-ubuntu-xenial, test-upgrade, test-stemcell-ubuntu-xenial], resource: ubuntu-xenial-stemcell}
        - {get: pipelines,    trigger: false}
      - task: generate
        file: pipelines/shared/tasks/generate-receipt.yml
        params:
          CPI_RELEASE_NAME: bosh-azure-cpi
          STEMCELL_NAME:    bosh-azure-hyperv-ubuntu-xenial-go_agent
      - {put: receipt, params: {file: certification/*-receipt.json}}


resource_types:
- name: terraform_type
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

resources:
  - name: after-midnight
    type: time
    source:
      start: 12:00 AM -0700
      stop: 2:00 AM -0700
  - name: pipelines
    type: git
    source:
      uri: https://github.com/cloudfoundry-incubator/bosh-cpi-certification
      branch: master
  - name: bosh-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-deployment
      branch: master
  - name: bosh-release
    type: bosh-io-release
    source:
      repository: cloudfoundry/bosh
  - name: bosh-cli
    type: s3
    source:
      regexp: bosh-cli-([0-9.]+)-linux-amd64
      bucket: bosh-cli-artifacts
      region_name: us-east-1
  - name: bats
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-acceptance-tests.git
      branch: master
  - name: receipt
    type: s3
    source:
      access_key_id: ((certification__bucket_access_key))
      secret_access_key: ((certification__bucket_secret_key))
      bucket: ((certification__bucket))
      regexp: .*-(\d+)-receipt\.json
      region_name: ((certification__bucket_region))
  - name: cpi-release
    type: bosh-io-release
    source:
      repository: cloudfoundry-incubator/bosh-azure-cpi-release
  - name: ubuntu-trusty-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-azure-hyperv-ubuntu-trusty-go_agent
  - name: ubuntu-xenial-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-azure-hyperv-ubuntu-xenial-go_agent
  - name: old-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-azure-hyperv-ubuntu-trusty-go_agent
  - name: centos-7-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-azure-hyperv-centos-7-go_agent
  - name: environment
    type: terraform_type
    source:
      storage:
        access_key_id: ((terraform_bucket_access_key_id))
        secret_access_key: ((terraform_bucket_secret_access_key))
        bucket: ((terraform_bucket))
        region_name: ((terraform_bucket_region))
        bucket_path: ((terraform_bucket_path))
      vars:
        azure_client_id: ((azure_client_id))
        azure_client_secret: ((azure_client_secret))
        azure_environment: ((azure_environment))
        azure_subscription_id: ((azure_subscription_id))
        azure_tenant_id: ((azure_tenant_id))
        location: ((azure_location))
  - name: bosh-linux-stemcell-builder
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-linux-stemcell-builder
      branch: master
  - name: syslog-release
    type: bosh-io-release
    source:
      repository: cloudfoundry/syslog-release
  - name: os-conf-release
    type: bosh-io-release
    source:
      repository: cloudfoundry/os-conf-release
